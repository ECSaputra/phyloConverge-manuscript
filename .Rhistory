setwd("~/GitHub/phyloConverge/tests")
library(RERconverge)
neutraltree = read.tree("../toydatasets/neutraltree_24way.tree")
View(neutraltree)
plot(neutraltree)
foregrounds = scan("../toydatasets/subterranean_foregrounds.txt")
foregrounds = scan("../toydatasets/subterranean_foregrounds.txt", what="character")
foreground_tree = foreground2Tree(foregrounds, masterTree, clade="terminal")
masterTree = list()
masterTree[[1]] = neutraltree
names(masterTree) = c("masterTree")
foreground_tree = foreground2Tree(foregrounds, masterTree, clade="terminal")
View(foreground_tree)
source("../phenotype_tree_processing.R")
neutraltree
foreground_tree = getTreeFromForegrounds(foregrounds, neutraltree, plotTree=T)
pathvec = rep(0, length(foreground_tree$tip.label))
fg_idx = which(foreground_tree$edge.length==1)
View(foreground_tree)
fg_edge_idx = which(foreground_tree$edge.length==1)
fg_node_idx = foreground_tree$edge[fg_edge_idx,2]
foreground_species = foreground_tree$tip.label[fg_node_idx]
foreground_species
pathvec[foreground_species] = 1
pathvec = rep(0, length(foreground_tree$tip.label))
names(pathvec) = foreground_tree$tip.label
pathvec[foreground_species] = 1
pathvec
permulated_tree = simBinPhenoSSM(foreground_tree, masterTree, root_species, foregrounds, sisters_list=NULL, pathvec, plotTreeBool = F)
root_species = "mm10"
permulated_tree = simBinPhenoSSM(foreground_tree, masterTree, root_species, foregrounds, sisters_list=NULL, pathvec, plotTreeBool = F)
plot(permulated_tree)
plot(permulated_tree)
permulated_tree = simBinPhenoSSM(foreground_tree, masterTree, root_species, foregrounds, sisters_list=NULL, pathvec, plotTreeBool = F)
plot(permulated_tree)
permulated_tree = simBinPhenoSSM(foreground_tree, masterTree, root_species, foregrounds, sisters_list=NULL, pathvec, plotTreeBool = F)
plot(permulated_tree)
permulated_tree = simBinPhenoSSM(foreground_tree, masterTree, root_species, foregrounds, sisters_list=NULL, pathvec, plotTreeBool = F)
plot(permulated_tree)
rep_tree=function(num_input,tree){
return(tree)
}
replicate_object=function(num_replicates,x){
return(x)
}
replicate_object(2,foregrounds)
replicate_object(3,foregrounds)
return_object=function(x){
return(x)
}
lapply(1:3, return_object, foregrounds)
lapply(1:3, return_object, x=foregrounds)
return_object=function(x_idx, x){
return(x)
}
lapply(1:3, return_object, x=foregrounds)
fg_reps = lapply(1:num_perms, return_object, x=foregrounds)
num_perms = 10
fg_reps = lapply(1:num_perms, return_object, x=foregrounds)
permulated_trees = lapply(fg_reps, getPermulatedPhenotypeTree, neutraltree=neutral_tree, root_species=root_species)
getPermulatedPhenotypeTree=function(foregrounds, neutraltree, root_species){
foreground_tree = getTreeFromForegrounds(foregrounds, neutraltree, plotTree=F)
pathvec = getPathvecfromForegroundTree(foreground_tree)
masterTree = list()
masterTree[[1]] = neutraltree
names(masterTree) = c("masterTree")
permulated_tree = simBinPhenoSSM(foreground_tree, masterTree, root_species, foregrounds, sisters_list=NULL, pathvec, plotTreeBool = F)
permulated_tree
}
permulated_trees = lapply(fg_reps, getPermulatedPhenotypeTree, neutraltree=neutral_tree, root_species=root_species)
permulated_trees = lapply(fg_reps, getPermulatedPhenotypeTree, neutraltree=neutraltree, root_species=root_species)
source("../permulation_functions.R")
getwd()
